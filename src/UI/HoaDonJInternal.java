/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.Models.ChiTietHangHoa;
import DAO.Models.DonViTinh;
import DAO.Models.HangHoa;
import DAO.Models.HoaDon;
import DAO.Models.HoaDonChiTiet;
import DAO.Models.KhachHang;
import DAO.Models.NhanVien;
import DAO.Models.TaiKhoan;
import Service.Implement.ChiTietHangHoaService;
import Service.Implement.HoaDonChiTietService;
import Service.Implement.HoaDonService;
import Service.Implement.KhachHangService;
import Service.Implement.NhanVienService;
import Service.Implement.TaiKhoanService;
import static UI.HangHoaJFrame.asService;
import static UI.HangHoaJFrame.dvtService;
import static UI.HangHoaJFrame.ktService;
import static UI.HangHoaJFrame.msService;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sangt
 */
public class HoaDonJInternal extends javax.swing.JInternalFrame {
    HoaDonService hdService = new HoaDonService();
    HoaDonChiTietService hdctService = new HoaDonChiTietService();
    ChiTietHangHoaService cthhService = new ChiTietHangHoaService();
    NhanVienService nvService = new NhanVienService();
    KhachHangService khService = new KhachHangService();
    TaiKhoanService tkService = new TaiKhoanService();
    List<HoaDon> hdList;
    List<HoaDonChiTiet> hdctList;
    DefaultTableModel dtm;

    /**
     * Creates new form HoaDonJInternal
     */
    public HoaDonJInternal() {
        initComponents();
        init();
    }
    
    public void init() {
        loadListHoaDon();
        loadTableHoaDon();
    }
    
    public void loadListHoaDon() {
        hdList = hdService.findAllHoaDonDoneTimKiem(tf_timKiem.getText().trim());
    }
    
    public void loadListHoaDonCT(int id) {
        hdctList = hdctService.findAllHoaDonChiTietByIdHD(id);
    }
    
    public int getIdHoaDon() {
        int i = tb_hoaDon.getSelectedRow();
        int id = Integer.parseInt(tb_hoaDon.getValueAt(i, 0).toString());
        return id;
    }
    
    public void loadTableHoaDonCT() {
        dtm = (DefaultTableModel)tb_hoadonct.getModel();
        dtm.setRowCount(0);
        for (HoaDonChiTiet hdct : hdctList) {
            ChiTietHangHoa cthh = cthhService.findIdChiTietHangHoa(hdct.getId_CTHangHoa());
            DonViTinh dvt = dvtService.findDonViTinhId(cthh.getId_DonViTinh());
            int thanhTien = hdct.getSoLuong() * cthh.getGiaBan();
            dtm.addRow(new Object[] {tenHangToString(hdct.getId_CTHangHoa()), hdct.getSoLuong(), dvt.getTenDonVi(), cthh.getGiaBan(), thanhTien});
        }
    }
    
    public void loadTableHoaDon() {
        dtm = (DefaultTableModel) tb_hoaDon.getModel();
        dtm.setRowCount(0);
        for (HoaDon hd : hdList) {
            KhachHang kh = khService.findKhachHangId(hd.getId_KhachHang());
            NhanVien nv = nvService.findIdNhanVien(hd.getId_NhanVien());
            TaiKhoan tk = tkService.findTaiKhoanId(nv.getId_TaiKhoan());
            dtm.addRow(new Object[] {hd.getId(), hd.getNgayTao(), tk.getTenTK(), kh.getTen(), kh.getSoDienThoai(), hd.getDiaChi(), hd.getPhiShip(), hd.getThanhTien(), hd.getDatCoc(), hd.getGhiChu()});
        }
    }
    
    public String tenHangToString(int idCTHH) {
        ChiTietHangHoa cthh = cthhService.findIdChiTietHangHoa(idCTHH);
        HangHoa hh = HangHoaJFrame.hhService.findIdHangHoa(cthh.getId_HangHoa());
        String tenHang = hh.getTenHang();
        String mauSac = "";
        if (cthh.getId_MauSac() != 0) {
            mauSac = "_Màu:" + msService.findMauSacId(cthh.getId_MauSac()).getTenMau();
        }
        tenHang += mauSac;
        String kichThuoc = "";
        if (cthh.getId_KichThuoc() != 0) {
            kichThuoc = "_Kích thước:" + ktService.findKichThuocId(cthh.getId_KichThuoc()).getTenKichThuoc();
        }
        tenHang += kichThuoc;
        String apSuat = "";
        if (cthh.getId_ApSuat() != 0) {
            apSuat = "_Áp suất:" + asService.findApSuatId(cthh.getId_ApSuat()).getTenApSuat();
        }
        tenHang += apSuat;
        String chieuDay = "";
        if (cthh.getId_ChieuDay() != 0) {
            double cd = HangHoaJFrame.cdService.findChieuDayId(cthh.getId_ChieuDay()).getDoDay();
            chieuDay = "_Độ dày:" + cd;
        }
        tenHang += chieuDay;

        return tenHang;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tf_timKiem = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_hoaDon = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_hoadonct = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("QUẢN LÝ HÓA ĐƠN");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Tìm kiếm:");

        tf_timKiem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tf_timKiem.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tf_timKiemCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_timKiem)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Hóa đơn"));

        tb_hoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Ngày tạo", "NV tạo", "Tên khách hàng", "SDT khách hàng", "Địa chỉ giao hàng", "Phí giao hàng", "Tiền cần thanh toán", "Đặt cọc", "Thanh toán", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_hoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_hoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_hoaDon);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Hóa đơn chi tiết"));

        tb_hoadonct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tên hàng", "Số lượng", "Đơn vị tính", "Đơn giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tb_hoadonct);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1256, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tb_hoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_hoaDonMouseClicked
        // TODO add your handling code here:
        loadListHoaDonCT(getIdHoaDon());
        loadTableHoaDonCT();
                
    }//GEN-LAST:event_tb_hoaDonMouseClicked

    private void tf_timKiemCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tf_timKiemCaretUpdate
        // TODO add your handling code here:
        loadListHoaDon();
        loadTableHoaDon();
    }//GEN-LAST:event_tf_timKiemCaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tb_hoaDon;
    private javax.swing.JTable tb_hoadonct;
    private javax.swing.JTextField tf_timKiem;
    // End of variables declaration//GEN-END:variables
}
